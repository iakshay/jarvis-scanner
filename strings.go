// Code generated by "stringer -type=TaskType,PortScanType,IpStatus -output=strings.go"; DO NOT EDIT.

package common

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IsAliveTask-0]
	_ = x[PortScanTask-1]
}

const _TaskType_name = "IsAliveTaskPortScanTask"

var _TaskType_index = [...]uint8{0, 11, 23}

func (i TaskType) String() string {
	if i < 0 || i >= TaskType(len(_TaskType_index)-1) {
		return "TaskType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TaskType_name[_TaskType_index[i]:_TaskType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NormalScan-0]
	_ = x[SynScan-1]
	_ = x[FinScan-2]
}

const _PortScanType_name = "NormalScanSynScanFinScan"

var _PortScanType_index = [...]uint8{0, 10, 17, 24}

func (i PortScanType) String() string {
	if i < 0 || i >= PortScanType(len(_PortScanType_index)-1) {
		return "PortScanType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PortScanType_name[_PortScanType_index[i]:_PortScanType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IpAlive-0]
	_ = x[IpDead-1]
}

const _IpStatus_name = "IpAliveIpDead"

var _IpStatus_index = [...]uint8{0, 7, 13}

func (i IpStatus) String() string {
	if i < 0 || i >= IpStatus(len(_IpStatus_index)-1) {
		return "IpStatus(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IpStatus_name[_IpStatus_index[i]:_IpStatus_index[i+1]]
}
